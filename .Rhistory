library(datasets)
data(iris)
?iris
head(iris)
?tapply
tapply(iris,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
?with
debug(ls)
ls
ls()
exit
0
bye()
exit()
recover()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
q
q
q
ls
library(mtcars)
library(datasets)
data(mtcars)
head(mtcars)
tapply(mtcars$hp,mtcars$cyl,mean)
a<-tapply(mtcars$hp,mtcars$cyl,mean)
abs(a[1]-a[3])
a[3]
a[3]-a[1]
?resolve
?solve
?matrix
matrix(1:16,nrow=4,ncol=4)
temp<-matrix(1:16,nrow=4,ncol=4)
solve(temp)
temp
?solve
solve(temp,4)
temp2<-matrix(20:32,nrow=4,ncol=4)
temp2<-matrix(27:32,nrow=4,ncol=4)
temp2<-matrix(17:32,nrow=4,ncol=4)
temp2
solve(temp,temp2)
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
h8 <- hilbert(8); h8
sh8 <- solve(h8)
sh8
a=matrix(rnorm(16),4,4)
solve(a)
setwd("~/git//ProgrammingAssignment2")
source("cachematrix.R")
makeVector(1:5)
a<-makeVector(1:5)
a
cachemean(1:5)
cachemean(a)
source("cachematrix.R)
""
)
)
asd
asd
q
q
"")
source("cachematrix.R")
m<-matrix(rnorm(16),4,4)
i<-makeCacheMatrix(m)
cacheSolve(i)
cacheSolve(i)
a <- matrix(c(3,1,2,1),nrow=2,ncol=2)
cacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(matrix(1:16,nrow=4,ncol=4)))
source("cachematrix.R")
cacheSolve(makeCacheMatrix(a))
source("cachematrix.R")
cacheSolve(makeCacheMatrix(a))
dim(a)
a$get()
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
source("cachematrix.R")
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
b$get()
a<-makeCacheMatrix()
a$set(matrix(1:4,2,2)
)
cacheSolve(a)
cacheSolve(a)
